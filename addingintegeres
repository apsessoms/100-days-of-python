# ðŸš¨ Don't change the code below ðŸ‘‡
two_digit_number = input("Type a two digit number: ")
# ðŸš¨ Don't change the code above ðŸ‘†

####################################
#Write your code below this line ðŸ‘‡

#Check the data type of two_digit_number
# print(type(two_digit_number))

#Get the first and second digits using subscripting then convert string to int.
first_digit = int(two_digit_number[0])
second_digit = int(two_digit_number[1])

#Add the two digits together
two_digit_number = first_digit + second_digit

print(two_digit_number)


#THIS IS THE ANSWER!!!!!!!!!!!!!
two_digit_number = input("type a two digit number:")

first_digit = two_digit_number[0]
second_digit = two_digit_number[1]


result = int(first_digit) + int(second_digit)
print(result)

#####NOTES#####
# num_char = len(input("What is your name?"))
# you took the integeter data type which is denoted by len up top, put it inside the parentheseis of the str function which takes object in between the paranethesis  converts it into a string. 
# new_num_char = str(num_char)
#that will be stored into this new numchar that you see listed below in the 6th line 
# print("Your name has " + new_num_char + " characters.")

# a = 123
# print (type(a))
#at first this prints out wrong...bc its an integer..need to convert to a string


















#Write your code above this line ðŸ‘†
# ðŸš¨ Do NOT modify the code below this line ðŸ‘‡

with open('testing_copy.py', 'w') as file:
  file.write('def test_func():\n')
  with open('main.py', 'r') as original:
    f2 = original.readlines()[0:40]
    for x in f2:
      file.write("    " + x)

import testing_copy
import unittest
from unittest.mock import patch
from io import StringIO
import os

class MyTest(unittest.TestCase):
  def run_test(self, given_answer, expected_print): 
    with patch('builtins.input', return_value=given_answer), patch('sys.stdout', new=StringIO()) as fake_out: 
      testing_copy.test_func()
      self.assertEqual(fake_out.getvalue(), expected_print) 

  def test_1(self):
    self.run_test(given_answer='52', expected_print="<class 'str'>\n7\n")

  def test_2(self):
    self.run_test(given_answer='92', expected_print="<class 'str'>\n11\n")

  def test_3(self):
    self.run_test(given_answer='10', expected_print="<class 'str'>\n1\n")


print("\n\n\n.\n.\n.")
print('Checking if the code first prints the data type on one line \n and the sum of the two numbers below on a second line...')
print('Running some tests on the code:')
print(".\n.\n.")
unittest.main(verbosity=1, exit=False)

os.remove("testing_copy.py") 

